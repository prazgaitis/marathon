<% @title = "2015 Chicago Marathon Training" %>

<html>
<head>
    <title>2015 Chicago Marathon Training</title>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
        <link href='https://fonts.googleapis.com/css?family=Roboto:100' rel='stylesheet' type='text/css'>
        <script src="https://code.jquery.com/jquery-2.1.3.min.js"></script>

</head>
<body>
    <div class="data" hidden="true">
        <div class="distances"></div>
        <div class="days"></div>
    </div>
    <!-- Header -->
    <div class="header col-md-12 roboto">
        <h1 class="heading3">Paul's Chicago Marathon Training</h1>
    </div>
    <div class="container-fluid">
        <div class="row">

            <!-- Chart div -->
            <div class="col-md-8 box">
                <h3 class="roboto heading3">Run distance by day (miles)</h3>
                  <div class="rectangle">
                      <canvas id="myChart" width="300" height="100"></canvas>
                      <br>
                      <div>
                          <span id="grey-key"></span><span class="roboto" >Average Pace (min / mi)</span>
                          <br>
                          <span id="orange-key"></span><span class="roboto">Distance (miles)</span>
                      </div>
                  </div>
            </div>
            <!-- Chart div -->

            <div class="last-run col-md-3 box">
                <h3 class="roboto heading3">Last Run</a></h3>
                <table class="table roboto">
                  <thead>
                  </thead>
                  <tbody>
                    <tr>
                      <th class="table-border-orange">Distance</th>
                        <td class="table-border-orange"><%= @last_run_distance.round(2) %> miles </td>
                    </tr>
                    <tr>
                      <th class="table-border-orange">Pace</th>
                        <td class="table-border-orange"><%= @last_run_pace_formatted %> min / mi</td>
                    </tr>
                    <tr>
                      <th class="table-border-orange">Time</th>
                        <td class="table-border-orange"><%= @last_run_time_formatted %></td>
                    </tr>
                    <tr>
                      <th class="table-border-orange">Date</th>
                        <td class="table-border-orange"><%= @last_run_start_time %></td>
                    </tr>
                    <tr>
                      <th class="table-border-orange"></th>
                        <td class="table-border-orange"></td>
                    </tr>
                  </tbody>
                </table>
            
                <h3 class="roboto heading3">% Complete Training:</h3>
                  <br>
                  <div id="example-percent-container" style="max-width: 200px;"></div>

            </div>
        </div>

    <!-- Dash content -->
    <div class="row" style="margin-bottom: 30px;">
        <div class="col-md-12">
            <h2 class="roboto heading3" style="padding-bottom: 20px; text-align: center; margin-top: 0px;">Overall Stats:</h2>
        </div>
                <div class="roboto">
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Today's Run:</span>
                          <span class="run-miles"><%= @todays_run %> mi</span>
                        </div>
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Number of Runs:</span>
                          <span class="run-miles"><%= @number_of_runs %></span>
                        </div>
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Total Miles Ran:</span>
                          <span class="run-miles" id="totalmiles"><%= @total_miles %></span>
                        </div>
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Total Time Spent Running:</span>
                          <span class="run-miles" id="totalmiles"><%= "#{@total_hours} hrs, #{@total_minutes} mins, #{@total_seconds} sec" %></span>
                        </div>
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Average Pace:</span>
                          <span class="run-miles" id="totalmiles"><%= "#{@average_pace_minutes}:#{@average_pace_seconds} / mile" %></span>
                        </div>
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Time until Chicago Marathon:</span>
                          <span class="run-miles" id="totaldays"><%= @weeks_until_race %> weeks, <%= @remainder_days_until_race %> days</span>
                        </div>
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Last Run:</span>
                          <span class="run-miles" id="totaldays"><%= @last_run_distance.round(2) %> mi</span>
                        </div>
                        <div class="col-md-3 col-md-4 col-xs-6 stat">
                          <span class="panel-title">Training miles left:</span>
                          <span class="run-miles" id="totaldays"><%= (677 - @total_miles).round(2) %> mi</span>
                        </div>
                </div>
    </div>


        <!-- <div class="row">
            <div class="col-md-1"></div>
            <div class="col-md-5">
                <h3 class="roboto heading3">Today:</h3>
                <span class='roboto'>
                    I ran <span class="o";> #@miles_ran_today </span> miles today. The training plan calls for <span class="o";> #@todays_run %></span>. Click here to <a id="tweet" class="o"></a> or <a class="o" id="tweet2"></a> me on my progress!
                </span>
            </div>
            <div class="col-md-5">
                <h3 class="roboto heading3">About this project</h3>
                <span class='roboto'>
                    I use the Nike+ iPhone app to track my runs. This dashboard pulls live data from my Nike+ account.
                </span>
            </div>
            <div class="col-md-1"></div>
        </div> -->
</body>
    <footer>
    <div class="row">
        <div class="footer-marathon col-md-12 roboto">
            
            <a href="/">
                <button class="back-button"><span class="glyphicon glyphicon-arrow-leftBack" aria-hidden="true"></span>BACK</button>
            </a>
        </div>
    </div>

    <script>
    $(document).ready(function() {
        // Get the  current URL
        var pathname = window.location;
     
       // Create the twitter URL
        var shametweet = 'http://twitter.com/share?text=@paulrazgaitis you bum! Get out there and run! &hashtags=chicagomarathon';
        var congratstweet = 'https://twitter.com/share?text=Keep up the good work, @paulrazgaitis! Only <%= (677 - @total_miles).round(2) %> miles left to go! &hashtags=chicagomarathon';

     
        // Place the text on the page. Change body to wherever you want the button placed. 
        $('#tweet').append('<a id="mycustomtwitterbutton" href=" '+ shametweet+' ">shame</a>')
        $('#tweet2').append('<a id="mycustomtwitterbutton" href=" '+ congratstweet+' ">congratulate</a>')
    });
</script>
        <script>
                window.twttr=(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr||{};if(d.getElementById(id))return t;js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);t._e=[];t.ready=function(f){t._e.push(f);};return t;}(document,"script","twitter-wjs"));
        </script>
        <script>
            // countUP(id of container, starting digit, ending digit, decimal places, speed)
            var options = {
              useEasing : true, 
              useGrouping : true, 
              separator : ',', 
              decimal : '.', 
              prefix : '', 
              suffix : 'miles' 
            };
            var totalmiles = new countUp("totalmiles", 0, '<%= @total_miles %>', 2, 4);
            totalmiles.start();

        </script>

        <script>
            var circle = new ProgressBar.Circle('#example-percent-container', {
                color: '#FCB03C',
                strokeWidth: 15,
                trailWidth: 1,
                duration: 2000,
                easing: "easeInOut",

                text: {
                    value: '0'
                },
                step: function(state, bar) {
                    bar.setText((bar.value() * 100).toFixed( 1 ));
                }
            });

            $(circle.text).addClass('roboto');

            circle.animate('<%= @percent_complete %>', function() {
                circle.stop(50);
            })
        </script>
        <script>
          Chart.defaults.global.responsive = true;


          var ctx = document.getElementById("myChart").getContext("2d");

          // var runs = $("div.distances").text();
          // var days = $("div.days").text();

          var data = {
                labels: gon.days,
                datasets: [
                    {
                        label: "Pace",
                        fillColor: "rgba(220,220,220,0.2)",
                        strokeColor: "rgba(220,220,220,1)",
                        pointColor: "rgba(220,220,220,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(151,187,205,1)",
                        data: gon.pace
                    },
                    {
                        label: "Runs",
                        fillColor: "rgba(252,176,60,0.2)",
                        strokeColor: "rgba(252,176,60,1)",
                        pointColor: "rgba(252,176,60,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(220,220,220,1)",
                        data: gon.runs
                   }
                ]
            };

          var myLineChart = new Chart(ctx).Line(data, options);

          Chart.defaults.global = {
                // Boolean - Whether to animate the chart
                animation: true,

                // Number - Number of animation steps
                animationSteps: 60,

                // String - Animation easing effect
                // Possible effects are:
                // [easeInOutQuart, linear, easeOutBounce, easeInBack, easeInOutQuad,
                //  easeOutQuart, easeOutQuad, easeInOutBounce, easeOutSine, easeInOutCubic,
                //  easeInExpo, easeInOutBack, easeInCirc, easeInOutElastic, easeOutBack,
                //  easeInQuad, easeInOutExpo, easeInQuart, easeOutQuint, easeInOutCirc,
                //  easeInSine, easeOutExpo, easeOutCirc, easeOutCubic, easeInQuint,
                //  easeInElastic, easeInOutSine, easeInOutQuint, easeInBounce,
                //  easeOutElastic, easeInCubic]
                animationEasing: "easeOutQuart",

                // Boolean - If we should show the scale at all
                showScale: true,

                // Boolean - If we want to override with a hard coded scale
                scaleOverride: false,

                // ** Required if scaleOverride is true **
                // Number - The number of steps in a hard coded scale
                scaleSteps: null,
                // Number - The value jump in the hard coded scale
                scaleStepWidth: null,
                // Number - The scale starting value
                scaleStartValue: null,

                // String - Colour of the scale line
                scaleLineColor: "rgba(0,0,0,.1)",

                // Number - Pixel width of the scale line
                scaleLineWidth: 1,

                // Boolean - Whether to show labels on the scale
                scaleShowLabels: true,

                // Boolean - Whether the scale should stick to integers, not floats even if drawing space is there
                scaleIntegersOnly: false,

                // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
                scaleBeginAtZero: true,

                // String - Scale label font declaration for the scale label
                scaleFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",

                // Number - Scale label font size in pixels
                scaleFontSize: 12,

                // String - Scale label font weight style
                scaleFontStyle: "normal",

                // String - Scale label font colour
                scaleFontColor: "#666",

                // Boolean - whether or not the chart should be responsive and resize when the browser does.
                responsive: true,

                // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: true,

                // Boolean - Determines whether to draw tooltips on the canvas or not
                showTooltips: true,

                // Function - Determines whether to execute the customTooltips function instead of drawing the built in tooltips (See [Advanced - External Tooltips](#advanced-usage-custom-tooltips))
                customTooltips: false,

                // Array - Array of string names to attach tooltip events
                tooltipEvents: ["mousemove", "touchstart", "touchmove"],

                // String - Tooltip background colour
                tooltipFillColor: "rgba(0,0,0,0.8)",

                // String - Tooltip label font declaration for the scale label
                tooltipFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",

                // Number - Tooltip label font size in pixels
                tooltipFontSize: 14,

                // String - Tooltip font weight style
                tooltipFontStyle: "normal",

                // String - Tooltip label font colour
                tooltipFontColor: "#fff",

                // String - Tooltip title font declaration for the scale label
                tooltipTitleFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",

                // Number - Tooltip title font size in pixels
                tooltipTitleFontSize: 14,

                // String - Tooltip title font weight style
                tooltipTitleFontStyle: "bold",

                // String - Tooltip title font colour
                tooltipTitleFontColor: "#fff",

                // Number - pixel width of padding around tooltip text
                tooltipYPadding: 6,

                // Number - pixel width of padding around tooltip text
                tooltipXPadding: 6,

                // Number - Size of the caret on the tooltip
                tooltipCaretSize: 8,

                // Number - Pixel radius of the tooltip border
                tooltipCornerRadius: 6,

                // Number - Pixel offset from point x to tooltip edge
                tooltipXOffset: 10,


                // Function - Will fire on animation progression.
                onAnimationProgress: function(){},

                // Function - Will fire on animation completion.
                onAnimationComplete: function(){}
            }

            var options = {

                ///Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines : true,

                //String - Colour of the grid lines
                scaleGridLineColor : "rgba(0,0,0,.05)",

                //Number - Width of the grid lines
                scaleGridLineWidth : 1,

                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,

                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,

                //Boolean - Whether the line is curved between points
                bezierCurve : false,

                //Number - Tension of the bezier curve between points
                bezierCurveTension : 0.4,

                //Boolean - Whether to show a dot for each point
                pointDot : true,

                //Number - Radius of each point dot in pixels
                pointDotRadius : 10,

                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth : 1,

                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius : 20,

                //Boolean - Whether to show a stroke for datasets
                datasetStroke : true,

                //Number - Pixel width of dataset stroke
                datasetStrokeWidth : 2,

                //Boolean - Whether to fill the dataset with a colour
                datasetFill : true,


            };  

        </script>
    </footer>
</html>